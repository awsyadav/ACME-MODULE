[0m[1mRefreshing Terraform state in-memory prior to plan...[0m
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.
[0m
[0m[1mdata.aws_caller_identity.current: Refreshing state...[0m
[0m[1mdata.aws_availability_zones.available: Refreshing state...[0m

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_eip.ManagementElasticIP[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_eip" "ManagementElasticIP" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0massociation_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdomain[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0minstance[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ipv4_pool[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mvpc[0m[0m               = true
    }

[1m  # aws_eip.PublicElasticIP[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_eip" "PublicElasticIP" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0massociation_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdomain[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0minstance[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ipv4_pool[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mvpc[0m[0m               = true
    }

[1m  # aws_eip_association.FWEIPManagementAssociation[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_eip_association" "FWEIPManagementAssociation" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip_address[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
    }

[1m  # aws_eip_association.FWEIPPublicAssociation[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_eip_association" "FWEIPPublicAssociation" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip_address[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
    }

[1m  # aws_iam_instance_profile.FirewallBootstrapInstanceProfile2Tier[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_iam_instance_profile" "FirewallBootstrapInstanceProfile2Tier" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mcreate_date[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "FirewallBootstrapInstanceProfile2Tier"
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mrole[0m[0m        = "FirewallBootstrapRole2Tier"
      [32m+[0m [0m[1m[0mroles[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m   = (known after apply)
    }

[1m  # aws_iam_role.FirewallBootstrapRole2Tier[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_iam_role" "FirewallBootstrapRole2Tier" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "FirewallBootstrapRole2Tier"
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)
    }

[1m  # aws_iam_role_policy.FirewallBootstrapRolePolicy2Tier[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_iam_role_policy" "FirewallBootstrapRolePolicy2Tier" {
      [32m+[0m [0m[1m[0mid[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m   = "FirewallBootstrapRolePolicy2Tier"
      [32m+[0m [0m[1m[0mpolicy[0m[0m = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = "s3:ListBucket"
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:s3:::masssterrrrs3buckeettttt"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = "s3:GetObject"
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:s3:::masssterrrrs3buckeettttt/*"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mrole[0m[0m   = (known after apply)
    }

[1m  # aws_instance.FWInstance[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_instance" "FWInstance" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-0254c2d14ff95d3c9"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = false
      [32m+[0m [0m[1m[0mebs_optimized[0m[0m                        = true
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m                 = "FirewallBootstrapInstanceProfile2Tier"
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = "stop"
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t3.medium"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = "acme"
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = false
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = "2e216316d51dc2edbab0830428cf7f27b82b61c9"
      [32m+[0m [0m[1m[0mvolume_tags[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = true
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = "/dev/xvda"
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = 60
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = "gp2"
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = false
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = 0
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }
      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = false
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = 1
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }
      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = false
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = 2
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # aws_instance.WPWebInstance[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_instance" "WPWebInstance" {
      [32m+[0m [0m[1m[0mami[0m[0m                                  = "ami-03ef731cc103c9f09"
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m              = false
      [32m+[0m [0m[1m[0mget_password_data[0m[0m                    = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_initiated_shutdown_behavior[0m[0m = "stop"
      [32m+[0m [0m[1m[0minstance_state[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                        = "t2.micro"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                             = "acme"
      [32m+[0m [0m[1m[0mmonitoring[0m[0m                           = false
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mtenancy[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0muser_data[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mvolume_tags[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m               = (known after apply)

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = false
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = 0
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # aws_internet_gateway.InternetGateway[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_internet_gateway" "InternetGateway" {
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m     = {
          [32m+[0m [0m"Application" = "PALOALTO"
          [32m+[0m [0m"Name"        = "PALOALTO-InternetGateway"
          [32m+[0m [0m"Network"     = "MGMT"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m   = (known after apply)
    }

[1m  # aws_network_acl.aclb765d6d2[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_network_acl" "aclb765d6d2" {
      [32m+[0m [0m[1m[0megress[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0msubnet_ids[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m     = (known after apply)
    }

[1m  # aws_network_acl_rule.acl1[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_network_acl_rule" "acl1" {
      [32m+[0m [0m[1m[0mcidr_block[0m[0m     = "0.0.0.0/0"
      [32m+[0m [0m[1m[0megress[0m[0m         = true
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_acl_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m       = "-1"
      [32m+[0m [0m[1m[0mrule_action[0m[0m    = "allow"
      [32m+[0m [0m[1m[0mrule_number[0m[0m    = 100
    }

[1m  # aws_network_acl_rule.acl2[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_network_acl_rule" "acl2" {
      [32m+[0m [0m[1m[0mcidr_block[0m[0m     = "0.0.0.0/0"
      [32m+[0m [0m[1m[0megress[0m[0m         = false
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_acl_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m       = "-1"
      [32m+[0m [0m[1m[0mrule_action[0m[0m    = "allow"
      [32m+[0m [0m[1m[0mrule_number[0m[0m    = 100
    }

[1m  # aws_network_interface.FWManagementNetworkInterface[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_network_interface" "FWManagementNetworkInterface" {
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_name[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ips[0m[0m       = [
          [32m+[0m [0m"10.0.0.99",
        ]
      [32m+[0m [0m[1m[0mprivate_ips_count[0m[0m = 1
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m = false
      [32m+[0m [0m[1m[0msubnet_id[0m[0m         = (known after apply)

      [32m+[0m [0mattachment {
          [32m+[0m [0m[1m[0mattachment_id[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0minstance[0m[0m      = (known after apply)
        }
    }

[1m  # aws_network_interface.FWPrivate12NetworkInterface[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_network_interface" "FWPrivate12NetworkInterface" {
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_name[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ips[0m[0m       = [
          [32m+[0m [0m"10.0.1.11",
        ]
      [32m+[0m [0m[1m[0mprivate_ips_count[0m[0m = 1
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m = false
      [32m+[0m [0m[1m[0msubnet_id[0m[0m         = (known after apply)

      [32m+[0m [0mattachment {
          [32m+[0m [0m[1m[0mattachment_id[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0minstance[0m[0m      = (known after apply)
        }
    }

[1m  # aws_network_interface.FWPublicNetworkInterface[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_network_interface" "FWPublicNetworkInterface" {
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_name[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ips[0m[0m       = [
          [32m+[0m [0m"10.0.0.100",
        ]
      [32m+[0m [0m[1m[0mprivate_ips_count[0m[0m = 1
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m = false
      [32m+[0m [0m[1m[0msubnet_id[0m[0m         = (known after apply)

      [32m+[0m [0mattachment {
          [32m+[0m [0m[1m[0mattachment_id[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0minstance[0m[0m      = (known after apply)
        }
    }

[1m  # aws_network_interface.WPNetworkInterface[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_network_interface" "WPNetworkInterface" {
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_name[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ips[0m[0m       = [
          [32m+[0m [0m"10.0.1.101",
        ]
      [32m+[0m [0m[1m[0mprivate_ips_count[0m[0m = 1
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m = false
      [32m+[0m [0m[1m[0msubnet_id[0m[0m         = (known after apply)

      [32m+[0m [0mattachment {
          [32m+[0m [0m[1m[0mattachment_id[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0minstance[0m[0m      = (known after apply)
        }
    }

[1m  # aws_route.route1[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_route" "route1" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m     = "0.0.0.0/0"
      [32m+[0m [0m[1m[0mdestination_prefix_list_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0megress_only_gateway_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mgateway_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mnat_gateway_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                      = (known after apply)
    }

[1m  # aws_route.route2[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_route" "route2" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m     = "0.0.0.0/0"
      [32m+[0m [0m[1m[0mdestination_prefix_list_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0megress_only_gateway_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mgateway_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mnat_gateway_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                      = (known after apply)
    }

[1m  # aws_route_table.rtb049a2461[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_route_table" "rtb049a2461" {
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # aws_route_table.rtb059a2460[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_route_table" "rtb059a2460" {
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # aws_route_table_association.subnetroute2[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_route_table_association" "subnetroute2" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_security_group.sgWideOpen[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_security_group" "sgWideOpen" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Wide open security group"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = ""
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mname[0m[0m                   = "sgWideOpen"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # aws_subnet.NewPublicSubnet[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_subnet" "NewPublicSubnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m               = "eu-west-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                      = "10.0.1.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m         = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                            = {
          [32m+[0m [0m"Application" = "PALOALTO"
          [32m+[0m [0m"Name"        = "PALOALTONewPublicSubnet"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                          = (known after apply)
    }

[1m  # aws_subnet.NewWebSubnet[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_subnet" "NewWebSubnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m               = "eu-west-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                      = "10.0.2.0/24"
      [32m+[0m [0m[1m[0mid[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m         = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                            = {
          [32m+[0m [0m"Application" = "PALOALTO"
          [32m+[0m [0m"Name"        = "PALOALTONewWebSubnet"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                          = (known after apply)
    }

[1m  # aws_vpc.main[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_vpc" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0massign_generated_ipv6_cidr_block[0m[0m = false
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                       = "10.0.0.0/16"
      [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mdefault_route_table_id[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mdhcp_options_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink_dns_support[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_hostnames[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_support[0m[0m               = true
      [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0minstance_tenancy[0m[0m                 = "default"
      [32m+[0m [0m[1m[0mipv6_association_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mmain_route_table_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                             = {
          [32m+[0m [0m"Application" = "PALOALTO"
          [32m+[0m [0m"Name"        = "ACME-VPC"
          [32m+[0m [0m"Network"     = "MGMT"
        }
    }

[1m  # aws_vpc_dhcp_options.dopt21c7d043[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_vpc_dhcp_options" "dopt21c7d043" {
      [32m+[0m [0m[1m[0mdomain_name[0m[0m         = "us-west-2.compute.internal"
      [32m+[0m [0m[1m[0mdomain_name_servers[0m[0m = [
          [32m+[0m [0m"AmazonProvidedDNS",
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m            = (known after apply)
    }

[1m  # aws_vpc_dhcp_options_association.dchpassoc1[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "aws_vpc_dhcp_options_association" "dchpassoc1" {
      [32m+[0m [0m[1m[0mdhcp_options_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m          = (known after apply)
    }

[1m  # null_resource.check_fw_ready[0m will be created[0m[0m
[0m[32m  +[0m [0mresource "null_resource" "check_fw_ready" {
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mtriggers[0m[0m = (known after apply)
    }

[0m[1mPlan:[0m 29 to add, 0 to change, 0 to destroy.[0m

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

